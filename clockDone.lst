
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	C:\Users\Lenovo\OneDrive - iut-dhaka.edu\7th Semester\EEE 4706\Project\EEE 4706 Project\clockDone.asm
	Object File:	C:\Users\Lenovo\OneDrive - iut-dhaka.edu\7th Semester\EEE 4706\Project\EEE 4706 Project\clockDone.hex
	List File:	C:\Users\Lenovo\OneDrive - iut-dhaka.edu\7th Semester\EEE 4706\Project\EEE 4706 Project\clockDone.lst



 Line  I  Addr  Code            Source

    1:		N      0000	ORG 	00H
    2:	  0000	75 81 70	MOV	SP, #70H
    3:	  0003	75 D0 00	MOV 	PSW, #00H
    4:		B      00B3	RS	EQU P3.3
    5:		B      00B4	RW 	EQU P3.4
    6:		B      00B5	ENBL	EQU P3.5
    7:	  0006	78 00		mov r0,#0h
    8:	  0008	79 00		mov r1,#0h
    9:	  000A	7A 00		mov r2,#0h
   10:	  000C	7B 00		mov r3,#0h
   11:	  000E	7C 00		mov r4,#0h
   12:	  0010	7D 00		mov r5,#0h
   13:	  0012	7E 00		mov r6,#0h
   14:	  0014	7F 00		mov r7,#0h
   15:
   16:	  0016	74 38				MOV	A, #38H			;init. LCD 2 lines, 5x7 matrix
   17:	  0018	12 01 24			LCALL	COMMAND		;call command subroutine
   18:	  001B	12 01 55			LCALL DELAY			;give LCD some time
   19:	  001E	74 0E				MOV 	A, #0EH			;dispplay on, cursor on
   20:	  0020	12 01 24			LCALL	COMMAND		;call command subroutine
   21:	  0023	12 01 55			LCALL 	DELAY			;give LCD some time
   22:	  0026	74 01				MOV	A, #01			;clear LCD
   23:	  0028	12 01 24			LCALL	COMMAND		;call command subroutine
   24:	  002B	12 01 55			LCALL 	DELAY			;give LCD some time
   25:	  002E	74 06				MOV	A, #06H			;shift cursor right
   26:	  0030	12 01 24			LCALL	COMMAND		;call command subroutine
   27:	  0033	12 01 55			LCALL 	DELAY			;give LCD some time
   28:	  0036	74 82				MOV	A, #82H			;cursor at line 1 postion 1
   29:	  0038	12 01 24			LCALL	COMMAND		;call command subroutine
   30:	  003B	12 01 55			LCALL DELAY			;give LCD some time
   31:	  003E	31 55				ACALL 	DELAY
   32:
   33:	  0040	74 84				MOV A, #084H
   34:	  0042	31 24				ACALL 	COMMAND
   35:	  0044	31 55				ACALL 	DELAY
   36:	  0046	E4				CLR 	A
   37:	  0047	74 3A				MOV	A,#3ah
   38:	  0049	12 01 34			LCALL 	DISPLAY
   39:	  004C	12 01 55			LCALL 	DELAY
   40:
   41:	  004F	74 87				MOV A, #087H
   42:	  0051	31 24				ACALL 	COMMAND
   43:	  0053	31 55				ACALL 	DELAY

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44:	  0055	E4				CLR 	A
   45:	  0056	74 3A				MOV	A,#3ah
   46:	  0058	12 01 34			LCALL 	DISPLAY
   47:	  005B	12 01 55			LCALL 	DELAY
   48:
   49:	  005E	90 01 5E	start:		MOV DPTR, #MSG_1
   50:	  0061			LOOP_1:
   51:	  0061	74 82				MOV A, #082H
   52:	  0063	31 24				ACALL 	COMMAND
   53:	  0065	31 55				ACALL 	DELAY
   54:	  0067	E4				CLR 	A
   55:	  0068	93				MOVC 	A,@A+DPTR
   56:	  0069	F5 90				mov P1,a
   57:	  006B	A8 82				mov r0,dpl
   58:	  006D	60 29				jz FINISH_12
   59:	  006F	12 01 34			LCALL 	DISPLAY
   60:	  0072	12 01 55			LCALL 	DELAY
   61:	  0075	08				inc r0
   62:
   63:
   64:
   65:	  0076	90 01 62			mov dptr, #MSG_2
   66:	  0079			LOOP_2:
   67:	  0079	74 83				MOV A, #083H
   68:	  007B	31 24				ACALL 	COMMAND
   69:	  007D	31 55				ACALL 	DELAY
   70:	  007F	E4				CLR 	A
   71:	  0080	93				MOVC 	A,@A+DPTR
   72:	  0081	A9 82				mov r1,dpl
   73:	  0083	60 32				jz FINISH_21
   74:	  0085	B4 34 08			cjne a,#34h,check_four
   75:	  0088	E5 90				mov a,P1
   76:	  008A	B4 32 03			cjne a,#32h,check_four
   77:	  008D	02 00 5E			ljmp start
   78:	  0090	12 01 34	check_four:	LCALL 	DISPLAY
   79:	  0093	12 01 55			LCALL 	DELAY
   80:	  0096	80 03				sjmp a1
   81:	  0098	02 01 21	FINISH_12:	ljmp FINISH_1
   82:	  009B			a1:
   83:				;		min loop start
   84:	  009B	90 01 62			mov dptr, #MSG_2
   85:	  009E			min1:
   86:	  009E	74 85				MOV A, #085H
   87:	  00A0	31 24				ACALL 	COMMAND
   88:	  00A2	31 55				ACALL 	DELAY
   89:	  00A4	E4				CLR 	A
   90:	  00A5	93				MOVC 	A,@A+DPTR
   91:	  00A6	B4 36 02			cjne a,#36h,check_six
   92:	  00A9	80 6B				sjmp minend
   93:	  00AB	F5 F0		check_six:	mov b,a
   94:	  00AD	AA 82				mov r2,dpl
   95:	  00AF	12 01 34			LCALL 	DISPLAY
   96:	  00B2	12 01 55			LCALL 	DELAY
   97:
   98:	  00B5	80 03				sjmp a2
   99:	  00B7	02 01 1C	FINISH_21:	ljmp FINISH_2

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:	  00BA			a2:
  101:
  102:
  103:	  00BA	0A		secend:		inc r2
  104:	  00BB	90 01 62			mov dptr, #MSG_2
  105:	  00BE			min2:
  106:	  00BE	74 86				MOV A, #086H
  107:	  00C0	31 24				ACALL 	COMMAND
  108:	  00C2	31 55				ACALL 	DELAY
  109:	  00C4	E4				CLR 	A
  110:	  00C5	93				MOVC 	A,@A+DPTR
  111:	  00C6	AB 82				mov r3,dpl
  112:	  00C8	60 47				jz minFINISH_3
  113:
  114:	  00CA	12 01 34			LCALL 	DISPLAY
  115:	  00CD	12 01 55			LCALL 	DELAY
  116:
  117:
  118:				;		second loop start
  119:	  00D0	90 01 6D			mov dptr, #MSG_3
  120:	  00D3			sec1:
  121:	  00D3	74 88				MOV A, #088H
  122:	  00D5	31 24				ACALL 	COMMAND
  123:	  00D7	31 55				ACALL 	DELAY
  124:	  00D9	E4				CLR 	A
  125:	  00DA	93				MOVC 	A,@A+DPTR
  126:	  00DB	B4 36 02			cjne a,#36h,check_six_sec
  127:	  00DE	80 2B				sjmp second
  128:	  00E0	F5 F0		check_six_sec:	mov b,a
  129:	  00E2	AE 82				mov r6,dpl
  130:	  00E4	12 01 34			LCALL 	DISPLAY
  131:	  00E7	12 01 55			LCALL 	DELAY
  132:	  00EA	0E				inc r6
  133:	  00EB	90 01 6D			mov dptr, #MSG_3
  134:	  00EE			sec2:
  135:	  00EE	74 89				MOV A, #089H
  136:	  00F0	31 24				ACALL 	COMMAND
  137:	  00F2	31 55				ACALL 	DELAY
  138:	  00F4	E4				CLR 	A
  139:	  00F5	93				MOVC 	A,@A+DPTR
  140:	  00F6	AF 82				mov r7,dpl
  141:	  00F8	60 0C				jz secFINISH_3
  142:
  143:	  00FA	12 01 34			LCALL 	DISPLAY
  144:	  00FD	12 01 55			LCALL 	DELAY	;call another delay here like delaysec and calculate this delay to m
				ake it 1 sec... and primary code will be done
  145:	  0100	0F				inc r7
  146:	  0101	8F 82				mov dpl,r7
  147:	  0103	02 00 EE			ljmp sec2
  148:	  0106			secFINISH_3:
  149:	  0106	8E 82				mov dpl,r6
  150:	  0108	02 00 D3			ljmp sec1
  151:
  152:	  010B			second:		;sec END
  153:	  010B	0B				inc r3
  154:	  010C	8B 82				mov dpl,r3

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  155:	  010E	02 00 BE			ljmp min2
  156:	  0111			minFINISH_3:
  157:	  0111	8A 82				mov dpl,r2
  158:	  0113	02 00 9E			ljmp min1
  159:
  160:						;min END
  161:	  0116	09		minend:		inc r1
  162:	  0117	89 82				mov dpl,r1
  163:	  0119	02 00 79			ljmp LOOP_2
  164:
  165:
  166:	  011C			FINISH_2:
  167:	  011C	88 82				mov dpl,r0
  168:	  011E	02 00 61			ljmp LOOP_1
  169:	  0121			FINISH_1:
  170:	  0121	02 00 5E			ljmp start
  171:
  172:
  173:	  0124			COMMAND:
  174:	  0124	12 01 45			LCALL READY
  175:	  0127	F5 80		 		MOV P0,A
  176:	  0129	C2 B3				CLR P3.3
  177:	  012B	C2 B4				CLR P3.4
  178:	  012D	D2 B5				SETB P3.5
  179:	  012F	31 55				ACALL DELAY
  180:	  0131	C2 B5				CLR P3.5
  181:	  0133	22				RET
  182:	  0134			DISPLAY:
  183:	  0134	12 01 45			LCALL 	READY
  184:	  0137	F5 80				MOV P0, A
  185:	  0139	D2 B3				SETB 	RS
  186:	  013B	C2 B4			  	CLR 	RW
  187:	  013D	D2 B5				SETB 	ENBL
  188:	  013F	12 01 55			LCALL 	DELAY
  189:	  0142	C2 B5			  	CLR 	ENBL
  190:	  0144	22				RET
  191:
  192:	  0145			READY:
  193:	  0145	D2 87				SETB 	P0.7
  194:	  0147	C2 B3		 		CLR 	RS
  195:	  0149	D2 B4		  		SETB 	RW
  196:	  014B			WAIT:
  197:	  014B	C2 B5				CLR 	ENBL
  198:	  014D	31 55				ACALL 	DELAY
  199:	  014F	D2 B5		  		SETB 	ENBL
  200:	  0151	20 87 F7			JB 	P0.7, WAIT
  201:	  0154	22		   		RET
  202:	  0155			DELAY:
  203:	  0155	7D 32				MOV 	R5, #50
  204:	  0157			AGAIN_2:
  205:	  0157	7C FF				MOV 	R4, #255
  206:	  0159			AGAIN:
  207:	  0159	DC FE				DJNZ 	R4, AGAIN
  208:	  015B	DD FA				DJNZ R5, AGAIN_2
  209:	  015D	22				RET
  210:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  211:	  015E			MSG_1:
  212:	  015E	30 31 32 00			DB "012",0
  213:
  214:	  0162			MSG_2:
  215:	  0162	30 31 32 33			DB "0123456789",0
	  0166	34 35 36 37
	  016A	38 39 00
  216:
  217:	  016D			MSG_3:
  218:	  016D	30 31 32 33			DB "0123456789",0
	  0171	34 35 36 37
	  0175	38 39 00
  219:						END





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
A1				  CODE	    009B	  82
A2				  CODE	    00BA	 100
AC				  BIT	      D6
ACC				  DATA	      E0
AGAIN				  CODE	    0159	 206
AGAIN_2				  CODE	    0157	 204
B				  DATA	      F0
CHECK_FOUR			  CODE	    0090	  78
CHECK_SIX			  CODE	    00AB	  93
CHECK_SIX_SEC			  CODE	    00E0	 128
COMMAND				  CODE	    0124	 173
CY				  BIT	      D7
DELAY				  CODE	    0155	 202
DISPLAY				  CODE	    0134	 182
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
ENBL				  NUMBER    00B5	   6
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
FINISH_1			  CODE	    0121	 169
FINISH_12			  CODE	    0098	  81
FINISH_2			  CODE	    011C	 166
FINISH_21			  CODE	    00B7	  99
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
LOOP_1				  CODE	    0061	  50
LOOP_2				  CODE	    0079	  66
MIN1				  CODE	    009E	  85
MIN2				  CODE	    00BE	 105
MINEND				  CODE	    0116	 161
MINFINISH_3			  CODE	    0111	 156
MSG_1				  CODE	    015E	 211
MSG_2				  CODE	    0162	 214
MSG_3				  CODE	    016D	 217
OV				  BIT	      D2

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
READY				  CODE	    0145	 192
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS				  NUMBER    00B3	   4
RS0				  BIT	      D3
RS1				  BIT	      D4
RW				  NUMBER    00B4	   5
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SEC1				  CODE	    00D3	 120
SEC2				  CODE	    00EE	 134
SECEND				  CODE	    00BA	 103
SECFINISH_3			  CODE	    0106	 148
SECOND				  CODE	    010B	 152
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
START				  CODE	    005E	  49
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1
WAIT				  CODE	    014B	 196
WR				  BIT	      B6
